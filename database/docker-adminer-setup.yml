# Docker Compose for PostgreSQL + Redis + Adminer
# Complete telehealth platform infrastructure

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: zappy_telehealth_postgres_2025
    restart: unless-stopped
    environment:
      POSTGRES_DB: telehealth_db
      POSTGRES_USER: telehealth_user
      POSTGRES_PASSWORD: secure_password_2025
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5433:5432"
    volumes:
      - zappy_postgres_data:/var/lib/postgresql/data
      - ./consolidated-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./seeds:/docker-entrypoint-initdb.d/seeds
    networks:
      - zappy_telehealth_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U telehealth_user -d telehealth_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: zappy_telehealth_redis_2025
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - zappy_redis_data:/data
    networks:
      - zappy_telehealth_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Adminer Database Administration Interface
  adminer:
    image: adminer:latest
    container_name: zappy_telehealth_adminer_2025
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: dracula
    networks:
      - zappy_telehealth_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  zappy_postgres_data:
    name: zappy_postgres_data_2025
  zappy_redis_data:
    name: zappy_redis_data_2025

networks:
  zappy_telehealth_network:
    name: zappy_telehealth_network_2025
    driver: bridge

# Usage Instructions:
# 1. Start services: docker-compose -f database/docker-adminer-setup.yml up -d
# 2. Access Adminer: http://localhost:8081
# 3. Login with:
#    System: PostgreSQL
#    Server: postgres
#    Username: telehealth_user
#    Password: secure_password_2025
#    Database: telehealth_db
# 4. Service Ports:
#    - PostgreSQL: localhost:5433
#    - Redis: localhost:6380
#    - Adminer: localhost:8081